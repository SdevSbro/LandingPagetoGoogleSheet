<form onsubmit="sendDataToSheet()">
  <label for="name">Name:</label><br>
  <input type="text" id="name" name="name"><br>
  <label for="city">City:</label><br>
  <input type="text" id="city" name="city"><br>
  <label for="phone">Phone:</label><br>
  <input type="text" id="phone" name="phone"><br>
  <label for="email">Email:</label><br>
  <input type="text" id="email" name="email"><br><br>
  <input type="submit" value="Submit">
</form>

<script>
  function sendDataToSheet() {
    // Your API key
    var apiKey = "YOUR_API_KEY";

    // The ID of the spreadsheet
    var spreadsheetId = "YOUR_SPREADSHEET_ID";

    // The A1 notation of the values to update
    var range = "A1";

    // The values to update
    var values = [[
      document.getElementById("name").value,
      document.getElementById("city").value,
      document.getElementById("phone").value,
      document.getElementById("email").value
    ]];

    // The request body
    var data = {
      values: values
    };

    // Build the HTTP request
    var request = new XMLHttpRequest();
    request.open("PUT", "https://sheets.googleapis.com/v4/spreadsheets/" + spreadsheetId + "/values/" + range + "?key=" + apiKey, true);
    request.setRequestHeader("Content-Type", "application/json");
    request.send(JSON.stringify(data));
  }
</script>




//This code adds an event listener to the form that will trigger the sendDataToSheet() function when the form is submitted. The sendDataToSheet() function sends an HTTP request to the Sheets API to update the specified range with the form data.

Make sure to replace YOUR_API_KEY and YOUR_SPREADSHEET_ID with your own API key and spreadsheet ID. You can also customize the range and the values to update as needed.
